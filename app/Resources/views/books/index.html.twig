{% extends 'base_bootstrap.html.twig' %}
{% block JSHead %}
    <script>
        let savedBookId;
        let base_server_url = 'http://127.0.0.1:8000/';

        function sendRequest(method, path, params = null) {
            const request = new XMLHttpRequest();
            request.open(method, path, false);
            if (method === "POST") {
                request.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');
                request.send(params);
            } else {
                request.send();
            }
            if (request.status !== 200) {
                alert("Error occurred! \n" + request.responseText);
            } else {
                alert("Ok");
                if (method === "GET") {
                    window.location.replace(path);
                } else {
                    window.location.reload();
                }
            }
        }

        function changeAuthor(authorId, bookId) {
            const newAuthorName = document.getElementById(authorId.toString() + bookId.toString() + '_name').value;
            const newAuthor2Name = document.getElementById(authorId.toString() + bookId.toString() + '_2name').value;
            let params = "authorId=" + authorId + "&authorFirstName=" + newAuthorName + "&authorSecondName=" + newAuthor2Name;
            sendRequest("POST", base_server_url + 'authors/changeName', params);
        }

        function addAuthor(bookId) {
            const newName = prompt("Enter Author Name:");
            const newSecondNAme = prompt("Enter Author Second Name:");
            if (newName == null || newSecondNAme == null || newName === "" || newSecondNAme === "")
                return;
            let params = "bookId=" + bookId + "&authorFirstName=" + newName + "&authorSecondName=" + newSecondNAme;
            sendRequest("POST", base_server_url + 'books/addAuthor', params);
        }

        function attachOrUnfastenExistingAuthor(authorId, isAttaching) {
            let params = "authorId=" + authorId + "&bookId=" + savedBookId + "&isAttaching=";// + (isAttaching) ? "1" : "0";
            if (isAttaching) {
                params += "1";
            } else {
                params += "0";
            }

            sendRequest("POST", base_server_url + 'books/registerAuthor', params);
        }

        function editBookTitle(bookId, defaultTitle) {
            const newBookTitle = prompt('Enter new title', defaultTitle);
            if (newBookTitle == null || newBookTitle === '')
                return;
            let params = "bookId=" + bookId + "&newTitle=" + newBookTitle + "&field=title";
            sendRequest("POST", base_server_url + 'books/editBookField', params);
        }

        function editBookDesc(isSaving) {
            let bookDesc = document.getElementById("book_" + savedBookId);
            bookDesc = bookDesc.innerText;
            let bookDescText = document.getElementById("bookDescTextModal");
            bookDescText.innerText = bookDesc;
            if (!isSaving)
                return;
            let params = "newDesc=" + document.getElementById("bookDescTextModal").value + "&bookId=" + savedBookId + "&field=desc";
            sendRequest("POST", base_server_url + "books/editBookTitle", params)
        }

        function sortBooks(field, order) {
            let params = "field=" + field + "&order=" + order;
            sendRequest("GET", base_server_url + "books/sort?" + params);
        }

        function editBookPubDate(bookId) {
            let bookDate = document.getElementById("book_pub_date" + bookId).value;
            if (bookDate === "")
                return;
            let params = "newDate=" + bookDate + "&bookId=" + bookId + "&field=date";
            sendRequest("POST", base_server_url + "books/editBookTitle", params)
        }


    </script>
{% endblock %}

{% block body %}

    <div class="container col-12">
        <h1>Books list</h1>

        <div class="container border border-primary">
            <div class="row">
                <div class="col-3">
                    <p>Sort by ASC:</p>
                </div>
                <div class="col-3">
                    <p>Sort by DESC:</p>
                </div>
                <div class="col-3">
                    <p>Queries:</p>
                </div>
            </div>
            <div class="row">
                <div class="col-3">
                    <a class="badge badge-primary" onclick="sortBooks('title', 'ASC')">Title</a>
                    <a class="badge badge-primary" onclick="sortBooks('imgPath', 'ASC')">Image</a>
                    <a class="badge badge-primary" onclick="sortBooks('publicationDate', 'ASC')">Realise
                        date</a>
                    <a class="badge badge-primary" onclick="sortBooks('description', 'ASC')">By
                        description</a>
                </div>
                <div class="col-3">
                    <a class="badge badge-primary" onclick="sortBooks('title', 'DESC')">Title</a>
                    <a class="badge badge-primary" onclick="sortBooks('imgPath', 'DESC')">Image</a>
                    <a class="badge badge-primary" onclick="sortBooks('publicationDate', 'DESC')">Realise
                        date</a>
                    <a class="badge badge-primary" onclick="sortBooks('description', 'DESC')">By
                        description</a>
                </div>
                <div class="col-3">
                    <a class="badge badge-primary" href="{{ path('native_query') }}">Native</a>
                    <a class="badge badge-primary" href="{{ path('doctrine_query') }}">By Doctrine</a>
                </div>
            </div>
        </div>
        <table class="table table-dark">
            <thead>
            <tr>
                <th scope="col">Id</th>
                <th scope="col">Title</th>
                <th scope="col">Description</th>
                <th scope="col">Image</th>
                <th scope="col">Realise date</th>
                <th scope="col">Authors</th>
            </tr>
            </thead>
            <tbody>

            {% for book in books %}
                <tr>
                    <th scope="row">{{ book.id }}</th>
                    <td>
                        <div class="container justify-content-center">
                            <div class="row">{{ book.title }}</div>
                            <div class="row">
                                <button type="button" class="btn btn-sm btn-primary"
                                        onclick="editBookTitle({{ book.id }}, '{{ book.title }}')">
                                    Edit book title
                                </button>
                            </div>
                        </div>
                    </td>
                    <td>
                        <div class="container justify-content-center">
                            <div class="row">
                                <p id="book_{{ book.id }}">{{ book.description }}</p>
                            </div>
                            <div class="row">
                                <button type="button" class="btn btn-sm btn-primary" data-toggle="modal"
                                        data-target="#exampleModalLong"
                                        onclick="savedBookId = {{ book.id }}; editBookDesc(false);">
                                    Edit book description
                                </button>
                            </div>
                        </div>
                    </td>
                    <td>
                        <div class="container ">
                            <div class="row p-1 col-12 justify-content-center">
                                <img src="{{ book.imgPath }}" alt="No image" width="150px" height="150px">
                            </div>
                            <div class="row p-1 col-12">
                                <form method="POST" enctype="multipart/form-data"
                                      action="{{ path('set_new_img', {'bookId':book.id}) }}">
                                    <div class="custom-file mb-3">
                                        <input type="hidden" name="MAX_FILE_SIZE" value="150000">
                                        <input type="file" class="custom-file-input" name="new_book_img" required>
                                        <label class="custom-file-label" for="validatedCustomFile">Choose new
                                            img</label>
                                    </div>
                                    <input type="submit" value="Set new image">
                                </form>
                            </div>
                        </div>

                    </td>
                    <td>
                        <div class="container">
                            <div class="row">
                                {% if book.publicationDate %}{{ book.publicationDate|date('Y-m-d') }}{% endif %}
                            </div>
                            <div class="row">Enter date :</div>
                            <div class="row"><input type="date" name="new_book_date" id="book_pub_date{{ book.id }}">
                            </div>
                            <div class="row">
                                <button class="btn btn-primary" onclick="editBookPubDate({{ book.id }})">Set new date
                                </button>
                            </div>
                        </div>
                    </td>
                    <td>
                        <ul>
                            {% for author in book.author %}
                                <li>
                                    <input type="text" value="{{ author.firstName }}"
                                           id="{{ author.id }}{{ book.id }}_name">
                                    <input type="text" value="{{ author.secondName }}"
                                           id="{{ author.id }}{{ book.id }}_2name">
                                    <button type="button" class="btn btn-sm btn-warning"
                                            onclick="changeAuthor({{ author.id }}, {{ book.id }})">
                                        Change Author
                                    </button>

                                </li>
                            {% endfor %}
                        </ul>
                        <button type="button" class="btn btn-primary" onclick="addAuthor({{ book.id }})">
                            Add new Co-Author
                        </button>
                        <button type="button" class="btn btn-primary" data-toggle="modal"
                                data-target="#attachUnfastenModal"
                                onclick="savedBookId={{ book.id }}">
                            Attach/Unfasten existing Author
                        </button>
                    </td>
                </tr>
            {% endfor %}
            </tbody>
        </table>
    </div>
    {% if new_book_form is defined %}
        {{ form_start(new_book_form) }}
        {{ form_widget(new_book_form) }}
        {{ form_end(new_book_form) }}
    {% endif %}
    <div class="modal fade" id="exampleModalLong" tabindex="-1" role="dialog" aria-labelledby="exampleModalLongTitle"
         aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLongTitle">Edit book description</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body" id="modalBookDesc">
                    <div class="row justify-content-center"><textarea class="col-11" id="bookDescTextModal"></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" onclick="editBookDesc(true)">Save changes</button>
                </div>
            </div>
        </div>
    </div>

{% endblock %}

{% block modalBody %}
    {% for author in authors %}
        <div class="row mb-1">

            <div class="col-6">{{ author.firstName }} {{ author.secondName }} </div>

            <div class="col-6">
                <button type="button" class="btn btn-success btn-sm"
                        onclick="attachOrUnfastenExistingAuthor({{ author.id }}, true)">Add author
                </button>
                <button type="button" class="btn btn-danger btn-sm"
                        onclick="attachOrUnfastenExistingAuthor({{ author.id }}, false)">Delete author
                </button>
            </div>

        </div>
    {% endfor %}
{% endblock %}

{% block modalHeader %}
    Edit authors.
{% endblock %}